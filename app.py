from flask import Flask, request
from twilio.twiml.messaging_response import MessagingResponse
from langchain.llms import OpenAI
import os

app = Flask(__name__)

@app.route('/')
def hello_world():
    return 'Hello, World!'


from flask import Flask, request, jsonify

app = Flask(__name__)

# Route to handle Twilio delivery status callback
@app.route('/twilio/status', methods=['POST', 'GET'])
def twilio_delivery_status():
    # Extract the relevant information from the Twilio callback
    message_sid = request.form.get('MessageSid')
    status = request.form.get('MessageStatus')

    # Process the delivery status notification
    # You can log the message status or take other actions based on it

    # For example, you can log the information
    print(f"Message SID: {message_sid}, Status: {status}")

    # Respond with a 200 OK status to acknowledge receipt
    return '', 200

# Retrieve the API key from the environment variable
openai_api_key = os.getenv('OPENAI_API_KEY')
if not openai_api_key:
    raise ValueError("No OPENAI_API_KEY set in environment variables")

llm = OpenAI(api_key=openai_api_key)

@app.route("/sms", methods=['GET', 'POST'])
def sms_reply():
    """Respond to incoming messages with a response generated by Langchain."""
    incoming_msg = request.values.get('Body', '').strip()

    # Use Langchain to generate a response
    response_text = llm.generate(incoming_msg, max_length=50)

    # Start our TwiML response
    resp = MessagingResponse()

    # Add a message
    resp.message(response_text)

    return str(resp)


if __name__ == '__main__':
    app.run(debug=True)
